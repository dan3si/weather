{"version":3,"sources":["global/API.js","redux/actionTypes.js","redux/store.js","redux/reducer.js","redux/actionCreators.js","components/MainModule/MainModule.js","pages/MainPage/MainPage.js","components/CityModule/CityModule.js","pages/CityPage/CityPage.js","App.js","index.js","components/CityModule/CityModule.module.scss","components/MainModule/MainModule.module.scss"],"names":["WEATHER_API_KEY","IMAGES_API_KEY","actionTypes","ADD_CITY","ADD_LOCATION","ADD_LANG","createStore","state","action","type","cities","city","location","lang","undefined","addCity","addLang","MainModule","history","useState","country","cityImage","description","temperature","icon","weather","setWeather","cityNames","setCityNames","isLoading","setIsLoading","useEffect","a","store","getState","find","data","name","toLowerCase","fetch","locationResponse","json","locationData","iso","capital_en","weatherResponse","weatherData","imagesResponse","imagesData","dispatch","image","results","urls","regular","cachedCity","sys","toUpperCase","slice","Math","round","main","temp","alert","className","styles","container","Flag","src","weatherIcon","Card","header","meta","Date","toTimeString","extra","search","options","onChange","option","push","value","onInputChange","query","response","placeholder","noOptionsMessage","valueContainer","provided","cursor","fluid","Dimmer","active","Loader","MainPage","CityModule","match","cityID","params","id","backButton","onClick","flag","CityPage","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+MAAaA,EAAkB,mCAClBC,EAAiB,8E,6ECKfC,EANK,CAClBC,SAAU,WACVC,aAAc,eACdC,SAAU,YCAGC,eCDQ,SAACC,EAAOC,GAC7B,OAAQA,EAAOC,MACb,KAAKP,EAAYC,SACf,OAAO,2BACFI,GADL,IAEEG,OAAO,GAAD,mBACDH,EAAMG,QADL,CAEJF,EAAOG,SAIb,KAAKT,EAAYE,aACf,OAAO,2BACFG,GADL,IAEEK,SAAUJ,EAAOI,WAGrB,KAAKV,EAAYG,SACf,OAAO,2BACFE,GADL,IAEEM,KAAML,EAAOK,OAGjB,QACE,OAAON,KDrBX,CACEG,OAAQ,GACRE,cAAUE,EACVD,UAAMC,IENGC,EAAU,SAACJ,GAAD,MAAW,CAChCF,KAAMP,EAAYC,SAClBQ,SAQWK,EAAU,SAACH,GAAD,MAAW,CAChCJ,KAAMP,EAAYG,SAClBQ,SCNWI,EAAa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACXC,mBAAS,CACrCR,KAAM,GACNS,QAAS,GACTC,UAAW,GACXC,YAAa,GACbC,YAAa,GACbC,KAAM,KAPiC,mBAClCC,EADkC,KACzBC,EADyB,OASPP,mBAAS,IATF,mBASlCQ,EATkC,KASvBC,EATuB,OAUPT,oBAAS,GAVF,mBAUlCU,EAVkC,KAUvBC,EAVuB,KAmEzC,OA/CAC,oBAAS,sBAAC,4CAAAC,EAAA,kEAEDC,EAAMC,WAAWxB,OAAOyB,MACzB,SAAAxB,GAAI,aAAIA,EAAKyB,KAAKC,KAAKC,iBAAf,UAAiCL,EAAMC,WAAWtB,gBAAlD,aAAiC,EAA2B0B,mBAElEL,EAAMC,WAAWtB,SALjB,iCAO2B2B,MAAM,4BAPjC,cAOEC,EAPF,gBAQuBA,EAAiBC,OARxC,cAQEC,EARF,OASE7B,EAAO6B,EAAatB,QAAQuB,IAT9B,UAW0BJ,MAAM,oDAAD,OAAqDG,EAAatB,QAAQwB,WAA1E,iBAA6F/B,EAA7F,kBAA2Gb,IAX1I,eAWE6C,EAXF,iBAYsBA,EAAgBJ,OAZtC,eAYEK,EAZF,iBAcyBP,MAAM,uDAAD,OAAwDG,EAAatB,QAAQwB,YAA7E,OAA0F3C,IAdxH,eAcE8C,EAdF,iBAeqBA,EAAeN,OAfpC,QAeEO,EAfF,OAiBJf,EAAMgB,UDtCcrC,ECsCOkC,EAAYT,KDtCL,CACxC5B,KAAMP,EAAYE,aAClBQ,cCqCMqB,EAAMgB,SAASjC,EAAQH,IACvBoB,EAAMgB,SAASlC,EAAQ,CACrBqB,KAAMU,EACNI,MAAK,UAAEF,EAAWG,QAAQ,UAArB,aAAE,EAAuBC,KAAKC,WArBjC,QAyBAC,EAAarB,EAChBC,WACAxB,OACAyB,MACC,SAAAxB,GAAI,OAAIA,EAAKyB,KAAKC,KAAKC,gBAAkBL,EAAMC,WAAWtB,SAAS0B,iBAGvEZ,EAAW,CACTf,KAAM2C,EAAWlB,KAAKC,KACtBjB,QAASkC,EAAWlB,KAAKmB,IAAInC,QAAQkB,cACrCjB,UAAWiC,EAAWJ,MACtB5B,YAAagC,EAAWlB,KAAKX,QAAQ,GAAGH,YAAY,GAAGkC,cAAgBF,EAAWlB,KAAKX,QAAQ,GAAGH,YAAYmC,MAAM,GACpHlC,YAAamC,KAAKC,MAAML,EAAWlB,KAAKwB,KAAKC,KAAO,QACpDrC,KAAK,mCAAD,OAAqC8B,EAAWlB,KAAKX,QAAQ,GAAGD,KAAhE,UAGNM,GAAa,GAzCP,kDA2CNgC,MAAM,EAAD,IA3CC,kCDrBe,IAAClD,ICqBhB,qBA6CP,IAGD,sBAAKmD,UAAWC,IAAOC,UAAvB,UACE,sBAAKF,UAAWC,IAAOrD,KAAvB,UACGc,EAAQd,KACT,cAACuD,EAAA,EAAD,CAAM7B,KAAMZ,EAAQL,aAGtB,sBAAK2C,UAAWC,IAAOvC,QAAvB,UACE,qBAAKsC,UAAWC,IAAO1C,YAAvB,SACGG,EAAQH,cAEX,qBAAKyC,UAAWC,IAAOzC,YAAvB,SACGE,EAAQF,cAEX,qBACE4C,IAAK1C,EAAQD,KACbuC,UAAWC,IAAOI,iBAItB,cAACC,EAAA,EAAD,CACEnB,MAAOzB,EAAQJ,UACfiD,OAAQ7C,EAAQd,KAChB4D,MAAM,IAAIC,MAAOC,eAAehB,MAAM,EAAG,GACzCiB,MACE,cAAC,IAAD,CACEX,UAAWC,IAAOW,OAClBC,QAASjD,EACTkD,SAAU,SAAAC,GAAM,OAAI5D,EAAQ6D,KAAR,kBAAwBD,EAAOE,SACnDC,cApFW,SAACC,GACpB,sBAAC,8BAAAlD,EAAA,sEACwBO,MAAM,qBAAD,OAAsB2C,IADnD,cACOC,EADP,gBAEsBA,EAAS1C,OAF/B,OAEO/B,EAFP,OAGCkB,EAAalB,GAHd,0CAAD,IAoFQ0E,YAAY,SACZC,iBAAkB,iBAAM,uBACxBrB,OAAQ,CACNsB,eAAgB,SAACC,GAAD,mBAAC,eACZA,GADW,IAEdC,OAAQ,aAKhBC,OAAK,IAGN5D,GACC,cAAC6D,EAAA,EAAD,CAAQC,QAAM,EAAd,SACE,cAACC,EAAA,EAAD,4BCrHGC,EAAW,SAAC,GAAiB,IAAf3E,EAAc,EAAdA,QACzB,OACE,cAAC,EAAD,CACEA,QAASA,K,iBCCF4E,EAAa,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAO7E,EAAc,EAAdA,QAAc,EAClBC,mBAAS,CACrCR,KAAM,GACNS,QAAS,GACTC,UAAW,GACXC,YAAa,GACbC,YAAa,GACbC,KAAM,KAPwC,mBACzCC,EADyC,KAChCC,EADgC,OAUdP,oBAAS,GAVK,mBAUzCU,EAVyC,KAU9BC,EAV8B,KAsDhD,OA1CAC,oBAAS,sBAAC,4CAAAC,EAAA,kEAEAgE,GAAUD,EAAME,OAAOD,OAExB/D,EAAMC,WAAWrB,KAJhB,iCAK2B0B,MAAM,4BALjC,cAKEC,EALF,gBAMuBA,EAAiBC,OANxC,OAMEC,EANF,OAOJT,EAAMgB,SAASjC,EAAQ0B,EAAatB,QAAQuB,MAPxC,WAUDV,EAAMC,WAAWxB,OAAOyB,MAAK,SAAAxB,GAAI,OAAIA,EAAKyB,KAAK8D,KAAOF,KAVrD,kCAW0BzD,MAAM,qDAAD,OAAsDyD,EAAtD,iBAAqE/D,EAAMC,WAAWrB,KAAtF,kBAAoGb,IAXnI,eAWE6C,EAXF,iBAYsBA,EAAgBJ,OAZtC,eAYEK,EAZF,iBAcyBP,MAAM,uDAAD,OAAwDO,EAAYT,MAApE,OAA2EpC,IAdzG,eAcE8C,EAdF,iBAeqBA,EAAeN,OAfpC,QAeEO,EAfF,OAiBJf,EAAMgB,SAASlC,EAAQ,CACrBqB,KAAMU,EACNI,MAAK,UAAEF,EAAWG,QAAQ,UAArB,aAAE,EAAuBC,KAAKC,WAnBjC,QAuBAC,EAAarB,EAAMC,WAAWxB,OAAOyB,MACzC,SAAAxB,GAAI,OAAIA,EAAKyB,KAAK8D,KAAOF,KAG3BtE,EAAW,CACTf,KAAM2C,EAAWlB,KAAKC,KACtBjB,QAASkC,EAAWlB,KAAKmB,IAAInC,QAAQkB,cACrCjB,UAAWiC,EAAWJ,MACtB5B,YAAagC,EAAWlB,KAAKX,QAAQ,GAAGH,YAAY,GAAGkC,cAAgBF,EAAWlB,KAAKX,QAAQ,GAAGH,YAAYmC,MAAM,GACpHlC,YAAamC,KAAKC,MAAML,EAAWlB,KAAKwB,KAAKC,KAAO,QACpDrC,KAAK,mCAAD,OAAqC8B,EAAWlB,KAAKX,QAAQ,GAAGD,KAAhE,UAGNM,GAAa,GApCP,kDAsCNgC,MAAM,EAAD,IAtCC,0DAwCP,IAGD,sBAAKC,UAAWC,IAAOC,UAAvB,UACE,sBAAKF,UAAWC,IAAOM,OAAvB,UACE,wBACEP,UAAWC,IAAOmC,WAClBC,QAAS,kBAAMlF,EAAQ6D,KAAK,QAG9B,qBAAKhB,UAAWC,IAAOrD,KAAvB,SACGc,EAAQd,OAGX,cAACuD,EAAA,EAAD,CAAM7B,KAAMZ,EAAQL,QAAS2C,UAAWC,IAAOqC,UAGjD,cAAChC,EAAA,EAAD,CACEnB,MAAOzB,EAAQJ,UACfiD,OAAQ7C,EAAQd,KAChB4D,MAAM,IAAIC,MAAOC,eAAehB,MAAM,EAAG,GACzCiB,MACE,sBAAKX,UAAWC,IAAOvC,QAAvB,UACE,qBAAKsC,UAAWC,IAAO1C,YAAvB,SACGG,EAAQH,cAGX,qBAAKyC,UAAWC,IAAOzC,YAAvB,SACGE,EAAQF,cAGX,qBACE4C,IAAK1C,EAAQD,KACbuC,UAAWC,IAAOI,iBAIxBqB,OAAK,IAGN5D,GACC,cAAC6D,EAAA,EAAD,CAAQC,QAAM,EAAd,SACE,cAACC,EAAA,EAAD,4BClGGU,EAAW,SAAC,GAAwB,IAAtBP,EAAqB,EAArBA,MAAO7E,EAAc,EAAdA,QAChC,OACE,cAAC,EAAD,CACE6E,MAAOA,EACP7E,QAASA,K,OCQAqF,MATf,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWb,IACjC,cAAC,IAAD,CAAOW,KAAK,kBAAkBC,OAAK,EAACC,UAAWJ,QCNrDK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,mBCP1BC,EAAOC,QAAU,CAAC,UAAY,8BAA8B,OAAS,2BAA2B,WAAa,+BAA+B,KAAO,yBAAyB,KAAO,yBAAyB,QAAU,4BAA4B,YAAc,gCAAgC,YAAc,gCAAgC,YAAc,kC,mBCA5VD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,KAAO,yBAAyB,KAAO,yBAAyB,QAAU,4BAA4B,YAAc,gCAAgC,YAAc,gCAAgC,OAAS,2BAA2B,YAAc,mC","file":"static/js/main.73073cbe.chunk.js","sourcesContent":["export const WEATHER_API_KEY = '71a7339a3b81eee30891bc5de01ba1a1';\nexport const IMAGES_API_KEY = '&client_id=ab3411e4ac868c2646c0ed488dfd919ef612b04c264f3374c97fff98ed253dc9';\n","const actionTypes = {\n  ADD_CITY: 'ADD_CITY',\n  ADD_LOCATION: 'ADD_LOCATION',\n  ADD_LANG: 'ADD_LANG',\n}\n\nexport default actionTypes;\n","import { createStore } from 'redux';\nimport { reducer } from './reducer';\n\nexport default createStore(\n  reducer,\n  {\n    cities: [],\n    location: undefined,\n    lang: undefined,\n  }\n);\n","import actionTypes from './actionTypes';\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_CITY:\n      return {\n        ...state,\n        cities: [\n          ...state.cities,\n          action.city,\n        ],\n      }\n    \n    case actionTypes.ADD_LOCATION:\n      return {\n        ...state,\n        location: action.location,\n      }\n    \n    case actionTypes.ADD_LANG:\n      return {\n        ...state,\n        lang: action.lang,\n      }\n\n    default:\n      return state;\n  }\n}\n","import actionTypes from './actionTypes';\n\nexport const addCity = (city) => ({\n  type: actionTypes.ADD_CITY,\n  city,\n});\n\nexport const addLocation = (location) => ({\n  type: actionTypes.ADD_LOCATION,\n  location,\n});\n\nexport const addLang = (lang) => ({\n  type: actionTypes.ADD_LANG,\n  lang,\n})\n","import React, { useEffect, useState } from 'react';\nimport { WEATHER_API_KEY, IMAGES_API_KEY } from '../../global/API';\nimport Select from 'react-select';\nimport { Card, Dimmer, Loader, Flag } from 'semantic-ui-react'\nimport styles from './MainModule.module.scss';\nimport store from '../../redux/store';\nimport { addCity, addLocation, addLang } from '../../redux/actionCreators';\n\nexport const MainModule = ({ history }) => {\n  const [weather, setWeather] = useState({\n    city: '',\n    country: '',\n    cityImage: '',\n    description: '',\n    temperature: '',\n    icon: '',\n  });\n  const [cityNames, setCityNames] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  \n  const getCityNames = (query) => {\n    (async () => {\n      const response = await fetch(`/api/cities?query=${query}`);\n      const cities = await response.json();\n      setCityNames(cities);\n    })();\n  }\n\n  useEffect(async () => {\n    try {\n      if (!store.getState().cities.find(\n          city => city.data.name.toLowerCase() === store.getState().location?.toLowerCase()\n        )\n        || !store.getState().location\n      ) {\n        const locationResponse = await fetch('http://api.sypexgeo.net/');\n        const locationData = await locationResponse.json();\n        const lang = locationData.country.iso;\n\n        const weatherResponse = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${locationData.country.capital_en}&lang=${lang}&appid=${WEATHER_API_KEY}`);\n        const weatherData = await weatherResponse.json();\n\n        const imagesResponse = await fetch(`https://api.unsplash.com/search/photos?page=1&query=${locationData.country.capital_en}${IMAGES_API_KEY}`);\n        const imagesData = await imagesResponse.json();\n\n        store.dispatch(addLocation(weatherData.name));\n        store.dispatch(addLang(lang));\n        store.dispatch(addCity({\n          data: weatherData,\n          image: imagesData.results[0]?.urls.regular,\n        }));\n      }\n\n      const cachedCity = store\n        .getState()\n        .cities\n        .find(\n          city => city.data.name.toLowerCase() === store.getState().location.toLowerCase()\n        );\n\n      setWeather({\n        city: cachedCity.data.name,\n        country: cachedCity.data.sys.country.toLowerCase(),\n        cityImage: cachedCity.image,\n        description: cachedCity.data.weather[0].description[0].toUpperCase() + cachedCity.data.weather[0].description.slice(1),\n        temperature: Math.round(cachedCity.data.main.temp - 273.15),\n        icon: `http://openweathermap.org/img/w/${cachedCity.data.weather[0].icon}.png`,\n      });\n      \n      setIsLoading(false);\n    } catch (error) {\n      alert(error);\n    }\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.city}>\n        {weather.city}\n        <Flag name={weather.country} />\n      </div>\n\n      <div className={styles.weather}>\n        <div className={styles.description}>\n          {weather.description}\n        </div>\n        <div className={styles.temperature}>\n          {weather.temperature}\n        </div>\n        <img\n          src={weather.icon}\n          className={styles.weatherIcon}\n        />\n      </div>\n\n      <Card\n        image={weather.cityImage}\n        header={weather.city}\n        meta={new Date().toTimeString().slice(0, 5)}\n        extra={(\n          <Select\n            className={styles.search}\n            options={cityNames}\n            onChange={option => history.push(`/cities/${option.value}`)}\n            onInputChange={getCityNames}\n            placeholder=\"Search\"\n            noOptionsMessage={() => 'No matching results'}\n            styles={{\n              valueContainer: (provided) => ({\n                ...provided,\n                cursor: 'text',\n              }),\n            }}\n          />\n        )}\n        fluid\n      />\n\n      {isLoading && (\n        <Dimmer active>\n          <Loader>Loading</Loader>\n        </Dimmer>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { MainModule } from '../../components/MainModule';\n\nexport const MainPage = ({ history }) => {\n  return (\n    <MainModule\n      history={history}\n    />\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { WEATHER_API_KEY, IMAGES_API_KEY } from '../../global/API';\nimport { Card, Flag, Loader, Dimmer } from 'semantic-ui-react'\nimport styles from './CityModule.module.scss';\nimport store from '../../redux/store';\nimport { addCity, addLang } from '../../redux/actionCreators';\n\nexport const CityModule = ({ match, history }) => {\n  const [weather, setWeather] = useState({\n    city: '',\n    country: '',\n    cityImage: '',\n    description: '',\n    temperature: '',\n    icon: '',\n  });\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(async () => {\n    try {\n      const cityID = +match.params.cityID;\n\n      if (!store.getState().lang) {\n        const locationResponse = await fetch('http://api.sypexgeo.net/');\n        const locationData = await locationResponse.json();\n        store.dispatch(addLang(locationData.country.iso));\n      }\n\n      if (!store.getState().cities.find(city => city.data.id === cityID)) {\n        const weatherResponse = await fetch(`http://api.openweathermap.org/data/2.5/weather?id=${cityID}&lang=${store.getState().lang}&appid=${WEATHER_API_KEY}`);\n        const weatherData = await weatherResponse.json();\n  \n        const imagesResponse = await fetch(`https://api.unsplash.com/search/photos?page=1&query=${weatherData.name}${IMAGES_API_KEY}`);\n        const imagesData = await imagesResponse.json();\n\n        store.dispatch(addCity({\n          data: weatherData,\n          image: imagesData.results[0]?.urls.regular,\n        }));\n      }\n\n      const cachedCity = store.getState().cities.find(\n        city => city.data.id === cityID\n      );\n\n      setWeather({\n        city: cachedCity.data.name,\n        country: cachedCity.data.sys.country.toLowerCase(),\n        cityImage: cachedCity.image,\n        description: cachedCity.data.weather[0].description[0].toUpperCase() + cachedCity.data.weather[0].description.slice(1),\n        temperature: Math.round(cachedCity.data.main.temp - 273.15),\n        icon: `http://openweathermap.org/img/w/${cachedCity.data.weather[0].icon}.png`,\n      });\n\n      setIsLoading(false);\n    } catch (error) {\n      alert(error);\n    }\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.header}>\n        <button\n          className={styles.backButton}\n          onClick={() => history.push('/')}\n        />\n\n        <div className={styles.city}>\n          {weather.city}\n        </div>\n\n        <Flag name={weather.country} className={styles.flag} />\n      </div>\n\n      <Card\n        image={weather.cityImage}\n        header={weather.city}\n        meta={new Date().toTimeString().slice(0, 5)}\n        extra={(\n          <div className={styles.weather}>\n            <div className={styles.description}>\n              {weather.description}\n            </div>\n\n            <div className={styles.temperature}>\n              {weather.temperature}\n            </div>\n\n            <img\n              src={weather.icon}\n              className={styles.weatherIcon}\n            />\n          </div>\n        )}\n        fluid\n      />\n\n      {isLoading && (\n        <Dimmer active>\n          <Loader>Loading</Loader>\n        </Dimmer>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { CityModule } from '../../components/CityModule';\n\nexport const CityPage = ({ match, history }) => {\n  return (\n    <CityModule\n      match={match}\n      history={history}\n    />\n  );\n}\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { MainPage } from './pages/MainPage';\nimport { CityPage } from './pages/CityPage';\nimport 'semantic-ui-css/semantic.min.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route path=\"/\" exact component={MainPage} />\n      <Route path=\"/cities/:cityID\" exact component={CityPage} />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CityModule_container__39Jag\",\"header\":\"CityModule_header__2fFJn\",\"backButton\":\"CityModule_backButton__3y45J\",\"city\":\"CityModule_city___sS3I\",\"time\":\"CityModule_time__29JRV\",\"weather\":\"CityModule_weather__1tvL9\",\"description\":\"CityModule_description__-fVVT\",\"temperature\":\"CityModule_temperature__3UODO\",\"weatherIcon\":\"CityModule_weatherIcon__2tgNt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MainModule_container__35_hB\",\"city\":\"MainModule_city__1Vx9D\",\"time\":\"MainModule_time__eVv3T\",\"weather\":\"MainModule_weather__1Bswl\",\"description\":\"MainModule_description__X8kKQ\",\"temperature\":\"MainModule_temperature__34-Im\",\"search\":\"MainModule_search__3qep8\",\"weatherIcon\":\"MainModule_weatherIcon__2hdPB\"};"],"sourceRoot":""}